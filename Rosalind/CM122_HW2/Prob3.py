aa = 'ACDEFGHIKLMNPQRSTVWY'
scores_file = [line.strip() for line in open("scores").readlines()]
scores_ = [[int(n) for n in line.split(" ")] for line in scores_file]

ref = "CAINHSCQSILYGWQNVPEQNGEWMCKEGMWRHDYYPLNNWEFNGLTITLGECCQQRTDCYWKWNVRAGCVLCGILVPGRQCNLFITTGNTHDYLERDLVCMEEEIKWAHCIANYYWAWILLPMCLCRAGKRTYNGIEMRSDPTAAVIWARSGGMATVDHGEEDLTNFCKSDICVTYAWHDVPTASTQVSWLAAMYWLYPRCEESWEPPKEIANFWNDNNPLCLHHHVYMPRWGSSHHQCCICCWNYVPVHHHQEVVRHGFDQHQHSWVGIDVYQRNLPERIMPGMKGFSNVCLADYCMVGHWENIPHRTAHFTRQARIDKKIYRPVMERLLPSVMGMDPMDGWTCIRYHVHVFFVCPPMWIYIHQIVVGFNHKQVPFTYYLTVELESQSKPMHYWPRTRVVTNNYPMRTHCWWGIGKGDVYRQKMECHSHHKTRQCWDWKMFQKGCTPHLDCSTKYWDVHIDITVIECSLLRGANCMIKDFYRYISECGQGYDLMNNCCEGFESLPCKDSPGFVWKARNICEMALLECCRSSSRGMGSIWRYVAKVHSEDYFMAVQFPFAYKSFPIGWCWMQCTYMVNPASMDTLHLFIVEWAIFHLNCPYEPAAKEGIWGYNTYFTKLFWQGIQYEHRPHFAETCERVMRIFTIIEPLQFQDVFIWKQPNAAQIFCWRRISHDNAMQQVLPCQFRMLNPGMYAHWCILPMSYKCDSSIRTPRPWCNMWCYAAKQWFMRRGKDFYSWWFYDYLPCEASQSMKHVEAWTMFNWKMLDTWVDDLHSDVHPYCSQAWCVFMRWTGFIPAQWEAQTSMAGAIMIEGWANSYKKTLIVCIIHCSFDMERWGKTPMYITKHMPYEGIHDAAEDYQNFVNAKVFKLTLNFQPKMERWGPRHHKLGIVFPFLSHHQWEFNVSWNSTKKIQPCKVKADGIVDRTLIMGPSGVANAIWMWIDTGPPDCRHFQLQIDANWWNMLEWQIHTPPYDPMHITIVQLTVGLNDCGVSPTDQMICGFQTVDQWGFDYTQEVFSRCQQGSTPRNCYGCKLAANPIRPKWGASGVMTDWKLVPMIQARKISVMIVDACPPVWWAWSVLFNERDIYCCRANDTTGAWHCYRSTWRENLPDMDYGAEHSVQTHIQDCWMHPVAVLVRINVNSMPVENDTTDWLYWNDNQQQELPFPDVWHNRRIVRFDAFHPVEEYPAILRIGASKNSFKEHHIEMIVWLLNIYFGIYDCCENANWTRIFEYRSQEPNAIFFSHVRMTLRSERPGESMLMQYDARQRLEMHKRHHADRENNDVCAPQPDACIMRWHKIWVKGPRTVIELFFLDIYWLGQANHVNNKTIMELHYKCYGSSPDRNLCRWDTYMCWSSWYISTMKDMCRTLDVGAIYWHQCCEHMVGTYGYLWIKCPLRGQLLFRQIYAETYNVSLKFKITREQSWVSCNHNESHAQRWHRQLMWTWWHRPCDQRDYVEENGNANWGFLGIHGGIEKNRCCMPIEELYWFMTNIRLKIVRHQCYQDRGVVYSTGGCRNRNDDPMKFCFQGSHKCVNKYCMWETKWHSYSLCKWSDYMHQMKYCPSLSETWQCQWMVWCAIYKQWIQLGINGFICFLHVNMCDLHQYAKEDTLTASKVAVKYMISFHRAQFMFEIGSAHGVPVPRFQRIPGVKRNWDNTQLYPYCDWSCFGCVNGAHILAYMLFRVEQTDAGDTFDWAMSRQCVDKGHTTMYFHQCRHHCFALARTWTYQLEEFGVAQWEGHQQDHLCTFRKEGLTFFKWQQIDYKGDCMMYKPFMFVENPALFPHNYHNTAVAEKVAKAVVPPYRLHECDNSCQGLGRRFNSLILKVGIVSEIHSFYGDNAPIMWTDALHIDFVKSGCNWFTHYFCGDCFHHKNVACLDIKDGVHWQEVTADQVDGLLIREMANNGNYTEKTYLNGVATAMIWHGICHDPPSWQRMIDLGVWCSAFIVVFGCKGFPSVWININVYAITTHHGHTDKVWHTSVCSMHVHEDQMFHEITFDSYKKQKPRKINFKKIFPTDFYWFTWLQIRNVGAPPVIEFNGMPEIWYTLVIPSACWNEDQTRWWQCSEGPAYACMCDSDTCFHSEYAWTMQFCWAARWGVLEIIEMMTCFYALDLWPGILSQFSAYANHIKQCFIWPDVNHEDVWFEQSCICNYGDDNECYRGKTPGVAIIRSAWFWYCKFVCDKKHTRSPEYQYTHPCSNQSSLMDLKTLEWETTGRIGKSIHEWWLCEVWYEAQWCWVKHYLIYIQNKTAPSDQKRYCDTTTNCPMQGEIMSFHHTVINLHLFNQRPRNEIKNNTMGLVPINKPFEVCQMKVSEVIYIHPNHMKYIRIRTNPIRHGCQKQRAGHDHYKEWEDLYCIHHKCCMRYAARYKMKGSLQDCTKKIGFKQGSYDMLCWRVDLAEGCENFPFFQFQSRIHEQPMFTNPMEHTSHSFIRDYDFSFKAKMLSVYFDWKCWRAVPGKHYQVWMQKCTFWVPLIEDFSCWKVINHNIAHWLHQVQWNVRDAKCYPFAPWGRHDTYNEMFEIDPCTVCDFALQAPNSLDREMRVTIDVSMMMKTYVHTNHFKQETIETFTIPWNTFTHHLMQNDVGLRTIWQREFHPYDTDQDFGRFCSMYLEQKHGQFLEKILHYCNWVMSIVAAVIHFWVNAMRSLYMFKIWYWQDLDQVWLYIANLEPPQDHHVQAMPCIGESMTCCAFQWGMECDAEVRSDRKHLTIVRHMRMVVLLGDEGPAYQGMIEMYTYYHWNNCHLDPDEHYHFTREYNMYSGPQYQIAFFYLLRTQCHSWYDRIMHSLACCGGTLRSSKHWGTAWMLLVVLVFRGICHKARVSQLGAFQQSVYYAHSPQQMCWAQAEIFAFAQIQVFGFSLQRGWDKYNFCIDERVQETVGEKCTVGHQPDSQNQPTSKISYYQQNLQCIWSGRYGREHIDKSRFTPYYFNCPWLKEVEENIMWVGLPAKNVFCFITHMAQGFMTESFNFGVPIHNNWSISYKHRVKNNEMPTRHCYNDKRSHDHYSVWCEGLTHYTSAGIHMDMWECNIFRWSHSQLFTNNFKDYNHIPDYCYSQWKTFIDWKVAADRVCRIKFCQIRWMMNWKIDFYSGGDAHDDVKQEAAMHVPRSEGMWQAYEWRSGMLKRLSSAWIAPFDLDFPGCIPINPGTNNGHFNSQRDYPAFKKTSNDIWENMTASLIWQKAASLEAKSMWNYYDQPTISAFIHRWSPCERYYFNNLLIYRLADPAPQDFPKMKGYMRGYFMAKFLTHVNTWSCQNLSYEYCNLEDHLLWEAISDPNPINNRCACMIPYHYECWLVWPAWEYNYMYSVSGAACWFMWHAQLPGQMHRFISIQTSIHYTPMTTVKNTDVMWTCCTLWLGIQVCWIYRMNYMFTVHTPWHALKDCCTLWEAWISYSYKDDFPWDDNVSVDLWAGTQESEVTIYSRMDQDQSWNIMHHEFIAHAVAVKCPHLGYRWSWTWWQGLYIVVNISMGVCYTPTDGDNMTFPLRIARDEFDDADSRDVFLIPSINQRVRYYRWMHPLMTEISERLYKENQANMTRPFAMHVQYWLYCAAQPIYQINIWKDGKFFGQMMYGGVWNENHGSETDQNHCCWSNNDFWIYNLLRNTRNDQVSAKRSWGTQWVSCPANGKNFWGREAILICWLYIYVEWWFPGAIAYHNCSSMTMNCMSDFHRFAPFKMVQEIDVGKQPEYDLIKERLAFQWFVEWYEQPDPQTHGMYTNMPLDDVRCNEAPDPPHWMARIWDFDEDGEQHKEVKKDCHSQTMMQPGACWSTCMDINKNCNPQAIVEINDYGDPVFVFAQQKDLSRWIMIPWWGWERKMNYNIESKCGLNACVEPDQSAPAWCDFLQSDRAHFNKYPEWIDTFCWNSEGVFTSEIFCKTKDMEYDSKVCSNQCDDFQTCYMKEFYYYNRYGTQQLTHKMRLKSRGLHNFVNHSAIPDYYSSFNVGFILLQLLEDLWINNMKWMDQWYTWCARAVGCDDLNRHMMIYNMGSDTILNWKKCIQMNHNHTESLYLMQDHPHFCCPCRHCYLCCMPRPCSQREDKREERTPNWNCRRWMCWQRVVHCSHEIFQPMQTFMNYALEGENREYRVGTVCRMVVSAIAFIEWWGWLRWEVLMPQSWIMKYWTCLCYIWLDSPTLGFCRWDFLSSNTASVLDHHEGTVPWWDFNRYTEPWWDPRQIQMHSIYWYPEMIFKDIMKK"
donor = "TAVNHSCVPEQNDFRICCIQPDAYSCWMCKEYPLNRCDEVEHDWEFNGLTCEDTLEECCQQRTDCYCKWNVDAGCYLSGILVTTGNTHDAFSVLLDWPLERDLVCHDSHVFGHHEEEIKWAHCIANYYWAWILLPMSLCRAGYQGYNGIEMRSDPFSLGDFWQAAVIHAVSGGFLINFCVSHCICVTYAWHDVPTASTQQSWLAAMYWYHNQYPECEESWEQPKEIANFWNDNNPLFIMPRSHSQLAWSPRLHVGWNCHNVPVHHHVVRHGFDQHQHDCYARNLPDRIMPGSPEFIKFMKGFSNVCLADYFWTSMALHVCNKGNTEHWENIWNCFVRHRTADSGKCRSFDTREARIDKKIDRPTMPYLLMYNAFCDKQDMDTMETRWTCIRYHVHKFFMWIYIHQIAACNVGFNHKQVPFTYYRELYRWLKSTENSKPMHYWKTVDGWYRLRTRVVTNTDIPMRTHCYGRHKAASWGQGKWARIMECTSHHKTRQCFDWKMFQKGCTPHLDCSTEHIDLLLRGANCMHVPHTWQVEEPGQGYLRFWVIQQSDLIDKKESLLCKDAFGFVWKARNICEMALLECCRSSSRGMGSGEFIRNWRYVAKVHSEDFFMASSIVKHGRFAYASFPVGWCWVQCTYVNPASMDTLHLFIVEYYEPAAKFTKLFTNYSSQGIQYEHRPHFAETCERVMRIFTIHSCHLFSLQFQDVWHMGFYWAQPNAAQIFCCSSWIQRRISHDNAMQMLNPGMYAHWYIKIYICDCFCGSIRTPNPWPNMWCYAAKQWFMRRGHDFYFRWWFYDYMKHVEGWTMFNWKMLTQACYCCMMYNTERHPYWSQAFINAQWEAQTSMQGAIMIISQSYKKTLIVCIIHCSFDMERPGKTQMRWCITKHMPREGIHDAALEDYQNFCPVAQVFLNPFCFIQPRMERPWTRWGLYPVCFMNRSTPPLSHMFSKRKGVHGQLASEPNDAAAMQNHEWNNTKKIQDVKVGIVDRTRDHWVGPSGVANATDTTPDWMWIDTGPPQMQIDANRANMLEWQITCENVEHTPPYDPMQLTVGLNDCGVSPTDQPICFYVCIRHRFQTVDWWGFDYTQEVQSRCQYGCKKWGASGVMVDTKLVPMIQARKISVKIVDACPPVWWAWSVLFNENDIYCCRANDTTHCYYCADKRMMENEVLWNLPDMDYGAEHSVQTHIQDCWWQWVSIKFGAIHWLVDVLINVNDTTFRRGHWLYWNDNQQQELPFPDVWMNRRIVRFDAGHPVEEYPCILRIGAKKNHIEMIVWTHKKYFVVLRNIYHQPMWFEGIYDCCENANWLEPNPDFFTKVRSTLRSERPGYSMLMQYDARQRLEMHKRHHADREANDVCAPQPDACICRWHKIWVKGPRTVIQPTVWWFFLDIYWLGQANHVNMELHYKCYLSSPDRNLCRWDTYMCWSSWYISTPKDMHTTCYRTRVGAIYWHQCCEHMVTYGWWWMFTICKAETYCIRNHNVSLKFKITREQYWNHRPWNYDRDHAQRDHRPKETCLALMWTWWHRPCDQGIRETQYVEENCNANWVEYALAWAEYNIEKNRWCMPEEMMYWFMTNIRLKKWGERHQWCHGISNHESKHMCWKPPRGNGQIRRGYTAWEDTWHSQHQMKYYRWILASISPSLSETWQCQWMPECAIYKQWINAPKREIVFLHINMCHLHQYAKEDTLTASKVARKYMISFHRCQFGWDIGVPVYRFPRIPMCAKRNWLNTQLYPYCDKSNHAGCVNLAHILARCGRPVTWNCNKPPLIFRSEQTDAGDTFDAAMSYDFPQHSTMYFHQCRHHCFRTWTAQLECFGVAQWEGHQQDHLELTFFSREMNHIKSDCMMVENPALFPHNYHNTAVAEKVAKAVVDPIYRMECDNSCQGLFKHNTWRRFNSLILGTIVSEIHSFYGRNYPIMAAPYRNCVCTTTEDMALKIPWFVKSGCNWETHYFCGDCFHHKNITRCMAAGVQHHHDGLLIREEKTTVPCPCNGVATAMIWHGSWQRMIKLCNLGVWCSAFIVKFGWKGFPSVDINIMVYAITTHFGHTDKVWFHTSVCSMAVHFHEITHDCQYKKQKCDNMRKINFKKIFPTQIRNVGTFGHSRSVHLAVPVIEFNGMPEIRMYAENSYTLRYTVDNTGDIRYPSADWNEDQTRWWQCSEGPASACMRADSDTCFHSEYNMTVWTMQYQWAARWWPGFVLIVIEMMTCPFYVYALDMVWPCIPYAMHIKQCFIWPDVNHTDVWFEQSCICNYGDDNECYRGMLLTPGVYPHQCNYIRSAGFDYCKFECLKKHTRSCEYQYTHPCSNQSPETTGRIFSSHWLCITNWYEAQWCWVKHYCNYIQNKTAPSTTTCPMQMEIMSVIFNQRPRTMGSPGVSKWFLVPINCQMKVSEYIYHPNHMKEIRIRKNPIRQIGITSIAFGNHKQRAGVDVYKQIVLWEDLYCWHQWPKPCMRYAARLGHYKLGPKMKWSLHDHQSMPYGDLAEGTAVWACIDVFQFQSRIHEQPMQNPMEHTSHSFIRHYDFTMCNFKAEMLSVYFDWKCWRAVPGKHYQVWYQTQWVPLIEDFSCNIAHWLVLVQWNIQDAKKYPFADIWDAEEMFQDFALQAPNSDRESAQTHCRVTISGYECWQLVEQMMMCTYVKSMCETNHFKQETIEYTIYMVWNTFTHHLMQNQVGLDTYRATDQDFGRFCSMKPEEEPLEQKHGQFKLHYCIVAAVIHFWVNAMRSLYMFKIWYWQDLDQVWLALMYIYCASRKKGQDKHVQAMPSSSDWAAEECDYEVRSDRKIMRHMRMVVLLGDEGMDAYQGMIEMNTYYHWTYCENKVDLDPDEHYHFTNFHVTMEYNQYSGPQYQIAFFYLLRVQCTSWCDRIMHSLAKHWGTALMLLVMLVFRGICHKARVSQLQFAFQQQYYYAHSPQQMCWAQAEMFAFAQIQVSLQRKWDKYNFCEDEAVQEYVGEKCTVGHQPESQYILMQPTSKISYYQQNLQCNWSITRYGRFTPYEFNRPWLKEVESNIMRVGLPAKNVFCFITHFNFQQMCHMVVAGLIISYKHRVKIKRSHDHYSVWCEGLTTPLALFNYTMDMWECNIKRWYTRLHSQLFTNLFHQGTTLSQEWRWAETFIDWKVAADKFCWIQIDDVKMEAAMHVPRSLGMWYQECCEWRSGMLKRYQHSKFSFMSSAWIAPFDLDIPINPGTNNGHDAVNSQTDYPDFKKTSNLKAASLEYDQPISAIHRWSRYLFNNLLRYRHNLSASPDAKPAPQDFPKMKGYMGAGYFMAKFLTDTQGERLVIPPGISWILMSGMMYFNNNLEDHLLWEAIKASSDSSGIYDTHYECWLSYSVSGAACWFMHGQDRMQATGTMPVIFKFKQRFISSESYQTSIHYTPMTWKCISLLIVAVDLGIQVVFACILLYFSKAMRTVHYPAHSDILWEAWIVYMHEAMDQYKDFFQTLFMAWSKSVDLIAGFQESTIYSRMDQDQSNNIMHGSNFKPAHPHLGLYKCWWCFIQVNISMGVCYIPTDGDNMTFPLRIARDEFDDADIRDLIPLIAQPLMTECSERGCDVKAMYKENQACMTRPFAVHVQYWDMVNCRAQPIYQINIWKDGQNDFYDNQVVRCGMMYGGVWNENHGSETDQNYCCWSNNDFWIYNLLRNTRNDQVSAKRSWGNQWVSCPANGKNTWIDPSENMKVRPAILIYVEWWFVYTGAIAYHNRSMYCRQIKVCMTMECMSDFHRFAFMCTELCSPEQDLIKMAWKRNSCPNMPLDDVRCKDPICWSTNNLEHWMARIWDFDEDGEPHKEVKKDCHRQTMMQPGACTSTCMDINKNCNPRAIVEINQCCAVETSRYTDPVFRFAQQKDLTAWEPIPWWRWMNYNIESKCGLNACVEYDQSAPAWCDFLQSDRAHFNKYPEEGCKSKDMEYDSSQCDDFQTVFFQRRYMKTYYNRYTQPVLDEGLHNFEMTSAIPDYYSSHNVGFIELFLQLAEDLWINNMKWMRQWYTWCARATAPEPWCGCDALNHHMMIRNDKKCGQLNHKYEFFCCKIFPRHCYLCTLWQQATDPRSQREDKREERTPNWNCRRSMNIVWQRVGHEIFQCMQTFMNYALEGENREYRMVVSAICPFIEWWGWLRWEVLVMVDHTWQPQSWIMKYWTCLCYIWLIHADCSPTMLWQCTWDFLSSNTASVLDHHEGSVPWWDFVRYTEPWWDPEDGESVIVQAHSIYWYPEWMGPLSRTQWFKSIMKC"

output_matrix = [[0]*(len(donor)+1) for i in range(len(ref)+1)]
trace_matrix = [[0]*(len(donor)+1) for i in range(len(ref)+1)]

for i in range(len(ref)+1):
    output_matrix[i][0] = i*-5
    trace_matrix[i][0] = 1
for j in range(len(donor)+1):
    output_matrix[0][j] = j*-5
    trace_matrix[0][j] = 0

for j in range(1, len(donor)+1):
    for i in range(1, len(ref)+1):
        deletion = output_matrix[i - 1][j] - 5
        insertion = output_matrix[i][j - 1] - 5
        idorsub = output_matrix[i - 1][j - 1] + scores_[aa.find(ref[i-1])][aa.find(donor[j-1])]
        val, idx = max((val, idx) for (idx, val) in enumerate([insertion, deletion, idorsub]))
        output_matrix[i][j] = val
        trace_matrix[i][j] = idx

print(output_matrix[len(ref)][len(donor)])

i = len(ref)
j = len(donor)
refnew = ''
donornew = ''
while i != 0 or j != 0:
    if trace_matrix[i][j] == 2:
        refnew = ref[i-1] + refnew
        donornew = donor[j-1] + donornew
        i -= 1
        j -= 1
    elif trace_matrix[i][j] == 1:
        donornew = '-' + donornew
        refnew = ref[i-1] + refnew
        i -= 1
    else:
        donornew = donor[j-1] + donornew
        refnew = '-' + refnew
        j -= 1

print(refnew)
print(donornew)
